# theme = "catppuccin_macchiato"
theme = "gruvbox_dark_hard"

[editor]
rulers = [80, 100]
cursorline = true
color-modes = true
true-color = true
jump-label-alphabet = "crstneiagmwlypfouqjvdhkbxz"
shell = ["powershell", "-NoProfile", "-Command"]

[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"

[editor.statusline]
left = ["mode", "spinner", "read-only-indicator", "file-modification-indicator"]
center = ["file-name", "version-control"]
right = ["diagnostics", "selections", "position", "file-encoding", "file-type"]
separator = "â”‚"
mode.normal = "NORMAL"
mode.insert = "INSERT"
mode.select = "SELECT"

[editor.indent-guides]
render = true

[editor.soft-wrap]
enable = true

[keys.normal]
q = ["move_prev_word_start", "insert_newline"]
Q = ["move_prev_long_word_start", "insert_newline"]
C-q = "record_macro"
A-q = "replay_macro"
X = "select_line_above"
C-a = "select_all"
C-s = ":w"
"A-j" = [ "extend_to_line_bounds", "delete_selection", "paste_after" ]
"A-k" = [ "extend_to_line_bounds", "delete_selection", "move_line_up", "paste_before" ]
ret = "goto_word"
"{" = "goto_prev_paragraph"
"}" = "goto_next_paragraph"
H = "move_prev_sub_word_start"
L = "move_next_sub_word_start"
C-y = [
  ':sh del C:\temp\unique-file',
  ':insert-output yazi.exe %{buffer_name} --chooser-file=C:\temp\unique-file',
  ':open %sh{type C:\temp\unique-file}',
  ':redraw',
]

# Commands designed to work with my `zettel-cli` program
[keys.normal."space".z]

# Generate sibling note (no open)
s = ":sh zettel id parse %{buffer_name} | zettel id next-sibling | zettel note create"

# Generate child note (no open)
c = ":sh zettel id parse %{buffer_name} | zettel id next-child | zettel note create"

# Search vault for selection and print results into buffer
f = ":append-output zettel search %{selection}"

# Match in next instance of pair
[keys.normal.m.n]
"(" = "@s\\(<ret>nmim"
"{" = "@s\\{<ret>nmim"
"[" = "@s\\[<ret>nmim"
'"' = '@s\"<ret>nmim'
"'" = "@s\\'<ret>nmim"
"<" = "@s<lt><ret>nmim"

# Match in previous instance of pair
[keys.normal.m.p]
"(" = "@s\\)<ret>Nmmmim"
"{" = "@s\\}<ret>Nmmmim"
"[" = "@s\\]<ret>Nmmmim"
'"' = '@s\"<ret>Nmmmim'
"'" = "@s\\'<ret>Nmmmim"
"<" = "@s<gt><ret>Nmmmim"

[keys.insert]
"C-backspace" = "delete_word_backward"
"C-del" = "delete_word_forward"

[editor.inline-diagnostics]
other-lines = "disable"
cursor-line = "hint"
